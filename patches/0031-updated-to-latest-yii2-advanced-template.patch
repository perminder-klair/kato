From 63c417a251fc960d55bc932cb60267bbdd4ae1b4 Mon Sep 17 00:00:00 2001
From: Parminder Klair <perminder.klair@gmail.com>
Date: Mon, 30 Mar 2015 17:25:01 +0100
Subject: [PATCH] updated to latest yii2 advanced template

---
 .travis.yml                                    | 55 ++++++++++++++++++++++++++
 environments/dev/console/config/main-local.php |  6 ++-
 environments/index.php                         |  1 +
 frontend/models/ResetPasswordForm.php          |  2 +-
 init                                           | 19 +++++----
 5 files changed, 71 insertions(+), 12 deletions(-)
 create mode 100644 .travis.yml

diff --git a/.travis.yml b/.travis.yml
new file mode 100644
index 0000000..825644f
--- /dev/null
+++ b/.travis.yml
@@ -0,0 +1,55 @@
+language: php
+
+php:
+  - 5.4
+  - 5.5
+  - 5.6
+  - 7.0
+#  - hhvm
+#  - hhvm-nightly
+
+# run build against hhvm but allow them to fail
+# http://docs.travis-ci.com/user/build-configuration/#Rows-That-are-Allowed-To-Fail
+matrix:
+  fast_finish: true
+  allow_failures:
+#    - php: hhvm-nightly
+    - php: 7.0
+
+# faster builds on new travis setup not using sudo
+sudo: false
+
+# cache vendor dirs
+cache:
+  directories:
+    - vendor
+    - $HOME/.composer/cache
+
+install:
+  - travis_retry composer self-update && composer --version
+  - travis_retry composer global require "fxp/composer-asset-plugin:1.0.0"
+  - export PATH="$HOME/.composer/vendor/bin:$PATH"
+  - travis_retry composer install --dev --prefer-dist --no-interaction
+# codeception
+  - travis_retry composer global require "codeception/codeception=2.0.*" "codeception/specify=*" "codeception/verify=*"
+# setup application:
+  - |
+    ./init --env=Development
+    sed -i s/root/travis/ common/config/main-local.php
+    sed -i "s/'cookieValidationKey' => ''/'cookieValidationKey' => 'testkey'/" frontend/config/main.php
+    sed -i "s/'cookieValidationKey' => ''/'cookieValidationKey' => 'testkey'/" backend/config/main.php
+    cd tests/codeception/backend && codecept build
+    cd ../common && codecept build
+    cd ../console && codecept build
+    cd ../frontend && codecept build
+    cd ../../../
+
+before_script:
+  - mysql -e 'CREATE DATABASE yii2_advanced_tests;';
+  - cd tests/codeception/bin && php yii migrate --interactive=0 && cd ../../..
+
+script:
+  - |
+    php -S localhost:8080 > /dev/null 2>&1 &
+    cd tests
+    codecept run
\ No newline at end of file
diff --git a/environments/dev/console/config/main-local.php b/environments/dev/console/config/main-local.php
index d0b9c34..ece8f35 100644
--- a/environments/dev/console/config/main-local.php
+++ b/environments/dev/console/config/main-local.php
@@ -1,3 +1,7 @@
 <?php
 return [
-];
+    'bootstrap' => ['gii'],
+    'modules' => [
+        'gii' => 'yii\gii\Module',
+    ],
+];
\ No newline at end of file
diff --git a/environments/index.php b/environments/index.php
index 52f2176..b49f90c 100644
--- a/environments/index.php
+++ b/environments/index.php
@@ -35,6 +35,7 @@ return [
         ],
         'setExecutable' => [
             'yii',
+            'tests/codeception/bin/yii',
         ],
         'setCookieValidationKey' => [
             'backend/config/main-local.php',
diff --git a/frontend/models/ResetPasswordForm.php b/frontend/models/ResetPasswordForm.php
index 579027b..7e2bf8a 100644
--- a/frontend/models/ResetPasswordForm.php
+++ b/frontend/models/ResetPasswordForm.php
@@ -57,6 +57,6 @@ class ResetPasswordForm extends Model
         $user = $this->_user;
         $user->password = $this->password;
         $user->removePasswordResetToken();
-        return $user->save();
+        return $user->save(false);
     }
 }
\ No newline at end of file
diff --git a/init b/init
index 837e9e8..b47af81 100755
--- a/init
+++ b/init
@@ -14,8 +14,8 @@
  * @license http://www.yiiframework.com/license/
  */
 
-if (!extension_loaded('mcrypt')) {
-    die('The mcrypt PHP extension is required by Yii2.');
+if (!extension_loaded('openssl')) {
+    die('The OpenSSL PHP extension is required by Yii2.');
 }
 
 $params = getParams();
@@ -72,7 +72,7 @@ foreach ($files as $file) {
     }
 }
 
-$callbacks = ['setCookieValidationKey', 'setWritable', 'setExecutable'];
+$callbacks = ['setCookieValidationKey', 'setWritable', 'setExecutable', 'createSymlink'];
 foreach ($callbacks as $callback) {
     if (!empty($env[$callback])) {
         $callback($root, $env[$callback]);
@@ -187,19 +187,18 @@ function setCookieValidationKey($root, $paths)
         echo "   generate cookie validation key in $file\n";
         $file = $root . '/' . $file;
         $length = 32;
-        $bytes = mcrypt_create_iv($length, MCRYPT_DEV_URANDOM);
+        $bytes = openssl_random_pseudo_bytes($length);
         $key = strtr(substr(base64_encode($bytes), 0, $length), '+/=', '_-.');
         $content = preg_replace('/(("|\')cookieValidationKey("|\')\s*=>\s*)(""|\'\')/', "\\1'$key'", file_get_contents($file));
         file_put_contents($file, $content);
     }
 }
 
-function createSymlink($links)
-{
+function createSymlink($root, $links) {
     foreach ($links as $link => $target) {
-        echo "    symlink $target as $link\n";
-        if (!is_link($link)) {
-            symlink($target, $link);
-        }
+        echo "      symlink " . $root . "/" . $target . " " . $root . "/" . $link . "\n";
+        //first removing folders to avoid errors if the folder already exists
+        @rmdir($root . "/" . $link);
+        @symlink($root . "/" . $target, $root . "/" . $link);
     }
 }
\ No newline at end of file
-- 
1.9.5 (Apple Git-50.3)

